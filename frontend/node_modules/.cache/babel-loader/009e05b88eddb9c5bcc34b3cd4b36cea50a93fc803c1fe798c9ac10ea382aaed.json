{"ast":null,"code":"var _jsxFileName = \"/Users/roanbahri/Downloads/bruin-planner/frontend/src/components/Planner.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Papa from 'papaparse';\nimport SearchBar from './SearchBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Planner = ({\n  username\n}) => {\n  _s();\n  const [classesData, setClassesData] = useState({});\n  useEffect(() => {\n    const fetchClassesData = async () => {\n      try {\n        const response = await fetch('/classes.csv'); // Fetching from the public directory\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const reader = response.body.getReader();\n        const result = await reader.read();\n        const decoder = new TextDecoder('utf-8');\n        const csvData = decoder.decode(result.value);\n\n        // Log the raw CSV data\n        console.log('Raw CSV data:', csvData);\n        const parsedData = Papa.parse(csvData, {\n          header: true\n        });\n\n        // Log the parsed data to check the structure\n        console.log('Parsed CSV data:', parsedData);\n        const classesBySubject = {};\n        parsedData.meta.fields.forEach(subject => {\n          classesBySubject[subject] = parsedData.data.map(row => row[subject]).filter(Boolean);\n        });\n        setClassesData(classesBySubject);\n      } catch (error) {\n        console.error('Error fetching classes data:', error);\n      }\n    };\n    fetchClassesData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      username: username,\n      classesData: classesData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.scrollableContainer,\n      children: Object.entries(classesData).map(([subject, classes]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.subjectContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: subject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: styles.classesList,\n          children: classes.map((className, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: className\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, subject, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Planner, \"Awi3Px8tAb6QZ5AyqS+ks3rZidA=\");\n_c = Planner;\nconst styles = {\n  scrollableContainer: {\n    maxHeight: '70vh',\n    // Adjust the height as needed\n    overflowY: 'auto',\n    // Enable vertical scrolling\n    border: '1px solid #ccc',\n    // Optional border for better visual distinction\n    padding: '10px',\n    marginTop: '20px' // Space above the container\n  },\n  subjectContainer: {\n    marginBottom: '20px' // Space between subjects\n  },\n  classesList: {\n    listStyleType: 'none',\n    // Remove default list styles\n    paddingLeft: '0' // Remove left padding\n  }\n};\nexport default Planner;\nvar _c;\n$RefreshReg$(_c, \"Planner\");","map":{"version":3,"names":["React","useEffect","useState","Papa","SearchBar","jsxDEV","_jsxDEV","Planner","username","_s","classesData","setClassesData","fetchClassesData","response","fetch","ok","Error","reader","body","getReader","result","read","decoder","TextDecoder","csvData","decode","value","console","log","parsedData","parse","header","classesBySubject","meta","fields","forEach","subject","data","map","row","filter","Boolean","error","children","fileName","_jsxFileName","lineNumber","columnNumber","style","styles","scrollableContainer","Object","entries","classes","subjectContainer","classesList","className","index","_c","maxHeight","overflowY","border","padding","marginTop","marginBottom","listStyleType","paddingLeft","$RefreshReg$"],"sources":["/Users/roanbahri/Downloads/bruin-planner/frontend/src/components/Planner.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Papa from 'papaparse';\nimport SearchBar from './SearchBar';\n\nconst Planner = ({ username }) => {\n  const [classesData, setClassesData] = useState({});\n\n  useEffect(() => {\n    const fetchClassesData = async () => {\n      try {\n        const response = await fetch('/classes.csv'); // Fetching from the public directory\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const reader = response.body.getReader();\n        const result = await reader.read();\n        const decoder = new TextDecoder('utf-8');\n        const csvData = decoder.decode(result.value);\n\n        // Log the raw CSV data\n        console.log('Raw CSV data:', csvData);\n\n        const parsedData = Papa.parse(csvData, { header: true });\n\n        // Log the parsed data to check the structure\n        console.log('Parsed CSV data:', parsedData);\n\n        const classesBySubject = {};\n        parsedData.meta.fields.forEach(subject => {\n          classesBySubject[subject] = parsedData.data.map(row => row[subject]).filter(Boolean);\n        });\n\n        setClassesData(classesBySubject);\n      } catch (error) {\n        console.error('Error fetching classes data:', error);\n      }\n    };\n\n    fetchClassesData();\n  }, []);\n\n  return (\n    <div>\n      <SearchBar username={username} classesData={classesData} />\n      <div style={styles.scrollableContainer}>\n        {Object.entries(classesData).map(([subject, classes]) => (\n          <div key={subject} style={styles.subjectContainer}>\n            <h3>{subject}</h3>\n            <ul style={styles.classesList}>\n              {classes.map((className, index) => (\n                <li key={index}>{className}</li>\n              ))}\n            </ul>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst styles = {\n  scrollableContainer: {\n    maxHeight: '70vh', // Adjust the height as needed\n    overflowY: 'auto', // Enable vertical scrolling\n    border: '1px solid #ccc', // Optional border for better visual distinction\n    padding: '10px',\n    marginTop: '20px', // Space above the container\n  },\n  subjectContainer: {\n    marginBottom: '20px', // Space between subjects\n  },\n  classesList: {\n    listStyleType: 'none', // Remove default list styles\n    paddingLeft: '0', // Remove left padding\n  },\n};\n\nexport default Planner;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}