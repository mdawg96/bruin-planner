{"ast":null,"code":"var _jsxFileName = \"/Users/roanbahri/Downloads/bruin-planner/frontend/src/components/TopStrip.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport logo from './logo2.jpeg'; // Adjust the path to match your directory structure\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopStrip = () => {\n  _s();\n  const [isHovered, setIsHovered] = useState(false);\n  const [hoveredButton, setHoveredButton] = useState(null); // Track which button is hovered\n\n  const tStyle = {\n    position: 'fixed',\n    top: '0',\n    // Position at the top of the screen\n    left: '0',\n    // Align to the left edge\n    width: '100%',\n    // Full width of the screen\n    height: '20px',\n    // Adjusted height to ensure enough space for the buttons and image\n    padding: '10px',\n    color: 'white',\n    fontSize: '1em',\n    zIndex: '1000',\n    // Ensures the strip is always on top\n    backgroundColor: 'blue',\n    display: 'flex',\n    // Use flexbox for layout\n    justifyContent: 'space-between',\n    // Space between items\n    alignItems: 'center' // Center items vertically\n  };\n  const buttonContainerStyle = {\n    display: 'flex',\n    // Use flexbox to align buttons horizontally\n    alignItems: 'center',\n    // Center buttons vertically\n    right: '20px'\n  };\n  const buttonStyle = {\n    margin: '0 5px',\n    // Reduce space between buttons\n    padding: '5px 10px',\n    // Adjusted padding to make the buttons smaller\n    fontSize: '0.8em',\n    // Adjusted font size to make the text smaller\n    cursor: 'pointer',\n    border: 'none',\n    borderRadius: '5px',\n    backgroundColor: '#fff',\n    color: 'black',\n    transition: 'background-color 0.3s ease',\n    textDecoration: 'none' // Ensure text decoration is none for Link\n  };\n  const linkStyle = isButtonHovered => ({\n    ...buttonStyle,\n    // Apply the same styles as the button\n    display: 'flex',\n    // Ensure flexbox properties\n    alignItems: 'center',\n    // Center text vertically\n    justifyContent: 'center',\n    // Center text horizontally\n    backgroundColor: isButtonHovered ? '#4db9e6' : '#fff' // Change color on hover\n  });\n  const imageStyle = {\n    height: '70px',\n    // Adjust the height as needed\n    transition: 'transform 1s linear',\n    transform: isHovered ? 'rotate(360deg)' : 'rotate(0deg)',\n    // Rotate on hover\n    border: 'none' // Ensure no border is applied\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: tStyle,\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      onMouseEnter: () => setIsHovered(true) // Set hover state to true on mouse enter\n      ,\n      onMouseLeave: () => setIsHovered(false) // Set hover state to false on mouse leave\n      ,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Logo\",\n        style: imageStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: buttonContainerStyle,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/about\",\n        style: linkStyle(hoveredButton === 'about'),\n        onMouseEnter: () => setHoveredButton('about') // Set hover state for about button\n        ,\n        onMouseLeave: () => setHoveredButton(null) // Reset hover state\n        ,\n        children: \"About\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        style: linkStyle(hoveredButton === 'login'),\n        onMouseEnter: () => setHoveredButton('login') // Set hover state for login button\n        ,\n        onMouseLeave: () => setHoveredButton(null) // Reset hover state\n        ,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(TopStrip, \"1WaUXPltD+/I7BKDLNVlDYlWWjs=\");\n_c = TopStrip;\nexport default TopStrip;\nvar _c;\n$RefreshReg$(_c, \"TopStrip\");","map":{"version":3,"names":["React","useState","logo","Link","jsxDEV","_jsxDEV","TopStrip","_s","isHovered","setIsHovered","hoveredButton","setHoveredButton","tStyle","position","top","left","width","height","padding","color","fontSize","zIndex","backgroundColor","display","justifyContent","alignItems","buttonContainerStyle","right","buttonStyle","margin","cursor","border","borderRadius","transition","textDecoration","linkStyle","isButtonHovered","imageStyle","transform","style","children","to","onMouseEnter","onMouseLeave","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/roanbahri/Downloads/bruin-planner/frontend/src/components/TopStrip.js"],"sourcesContent":["import React, { useState } from 'react';\nimport logo from './logo2.jpeg'; // Adjust the path to match your directory structure\nimport { Link } from 'react-router-dom';\n\nconst TopStrip = () => {\n  const [isHovered, setIsHovered] = useState(false);\n  const [hoveredButton, setHoveredButton] = useState(null); // Track which button is hovered\n\n  const tStyle = {\n    position: 'fixed',\n    top: '0', // Position at the top of the screen\n    left: '0', // Align to the left edge\n    width: '100%', // Full width of the screen\n    height: '20px', // Adjusted height to ensure enough space for the buttons and image\n    padding: '10px',\n    color: 'white',\n    fontSize: '1em',\n    zIndex: '1000', // Ensures the strip is always on top\n    backgroundColor: 'blue',\n    display: 'flex', // Use flexbox for layout\n    justifyContent: 'space-between', // Space between items\n    alignItems: 'center', // Center items vertically\n  };\n\n  const buttonContainerStyle = {\n    display: 'flex', // Use flexbox to align buttons horizontally\n    alignItems: 'center', // Center buttons vertically\n    right: '20px',\n  };\n\n  const buttonStyle = {\n    margin: '0 5px', // Reduce space between buttons\n    padding: '5px 10px', // Adjusted padding to make the buttons smaller\n    fontSize: '0.8em', // Adjusted font size to make the text smaller\n    cursor: 'pointer',\n    border: 'none',\n    borderRadius: '5px',\n    backgroundColor: '#fff',\n    color: 'black',\n    transition: 'background-color 0.3s ease',\n    textDecoration: 'none', // Ensure text decoration is none for Link\n  };\n\n  const linkStyle = (isButtonHovered) => ({\n    ...buttonStyle, // Apply the same styles as the button\n    display: 'flex', // Ensure flexbox properties\n    alignItems: 'center', // Center text vertically\n    justifyContent: 'center', // Center text horizontally\n    backgroundColor: isButtonHovered ? '#4db9e6' : '#fff', // Change color on hover\n  });\n\n  const imageStyle = {\n    height: '70px', // Adjust the height as needed\n    transition: 'transform 1s linear',\n    transform: isHovered ? 'rotate(360deg)' : 'rotate(0deg)', // Rotate on hover\n    border: 'none', // Ensure no border is applied\n  };\n\n  return (\n    <div style={tStyle}>\n      <Link\n        to=\"/\"\n        onMouseEnter={() => setIsHovered(true)} // Set hover state to true on mouse enter\n        onMouseLeave={() => setIsHovered(false)} // Set hover state to false on mouse leave\n      >\n        <img src={logo} alt=\"Logo\" style={imageStyle} />\n      </Link>\n      <div style={buttonContainerStyle}>\n        <Link\n          to=\"/about\"\n          style={linkStyle(hoveredButton === 'about')}\n          onMouseEnter={() => setHoveredButton('about')} // Set hover state for about button\n          onMouseLeave={() => setHoveredButton(null)} // Reset hover state\n        >\n          About\n        </Link>\n        <Link\n          to=\"/login\"\n          style={linkStyle(hoveredButton === 'login')}\n          onMouseEnter={() => setHoveredButton('login')} // Set hover state for login button\n          onMouseLeave={() => setHoveredButton(null)} // Reset hover state\n        >\n          Login\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default TopStrip;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}