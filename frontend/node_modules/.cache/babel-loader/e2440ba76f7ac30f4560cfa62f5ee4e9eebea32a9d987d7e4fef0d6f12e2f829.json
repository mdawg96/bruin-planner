{"ast":null,"code":"var _jsxFileName = \"/Users/roanbahri/Downloads/bruin-planner/frontend/src/components/Planner.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Papa from 'papaparse';\nimport SearchBar from './SearchBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Planner = ({\n  username\n}) => {\n  _s();\n  const [classesData, setClassesData] = useState({});\n  useEffect(() => {\n    const fetchClassesData = async () => {\n      try {\n        const response = await fetch('/classes-1.csv'); // Adjusted file name\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const reader = response.body.getReader();\n        const result = await reader.read();\n        const decoder = new TextDecoder('utf-8');\n        const csvData = decoder.decode(result.value);\n        const parsedData = Papa.parse(csvData, {\n          header: false\n        });\n        const classesBySubject = {};\n        const subjects = parsedData.data[0];\n        subjects.forEach((subject, index) => {\n          classesBySubject[subject] = parsedData.data.slice(1).map(row => {\n            const [name, details] = row[index].split(' - ');\n            const [units, description] = details.split(' | ');\n            return {\n              name,\n              units,\n              description\n            };\n          }).filter(Boolean);\n        });\n        setClassesData(classesBySubject);\n      } catch (error) {\n        console.error('Error fetching classes data:', error);\n      }\n    };\n    fetchClassesData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(SearchBar, {\n      username: username,\n      classesData: classesData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Planner, \"Awi3Px8tAb6QZ5AyqS+ks3rZidA=\");\n_c = Planner;\nexport default Planner;\nvar _c;\n$RefreshReg$(_c, \"Planner\");","map":{"version":3,"names":["React","useEffect","useState","Papa","SearchBar","jsxDEV","_jsxDEV","Planner","username","_s","classesData","setClassesData","fetchClassesData","response","fetch","ok","Error","reader","body","getReader","result","read","decoder","TextDecoder","csvData","decode","value","parsedData","parse","header","classesBySubject","subjects","data","forEach","subject","index","slice","map","row","name","details","split","units","description","filter","Boolean","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/roanbahri/Downloads/bruin-planner/frontend/src/components/Planner.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Papa from 'papaparse';\nimport SearchBar from './SearchBar';\n\nconst Planner = ({ username }) => {\n  const [classesData, setClassesData] = useState({});\n\n  useEffect(() => {\n    const fetchClassesData = async () => {\n      try {\n        const response = await fetch('/classes-1.csv'); // Adjusted file name\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const reader = response.body.getReader();\n        const result = await reader.read();\n        const decoder = new TextDecoder('utf-8');\n        const csvData = decoder.decode(result.value);\n\n        const parsedData = Papa.parse(csvData, { header: false });\n        const classesBySubject = {};\n        const subjects = parsedData.data[0];\n\n        subjects.forEach((subject, index) => {\n          classesBySubject[subject] = parsedData.data.slice(1).map(row => {\n            const [name, details] = row[index].split(' - ');\n            const [units, description] = details.split(' | ');\n            return { name, units, description };\n          }).filter(Boolean);\n        });\n\n        setClassesData(classesBySubject);\n      } catch (error) {\n        console.error('Error fetching classes data:', error);\n      }\n    };\n\n    fetchClassesData();\n  }, []);\n\n  return (\n    <div>\n      <SearchBar username={username} classesData={classesData} />\n    </div>\n  );\n};\n\nexport default Planner;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EAElDD,SAAS,CAAC,MAAM;IACd,MAAMW,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC;QAChD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,MAAMC,MAAM,GAAGJ,QAAQ,CAACK,IAAI,CAACC,SAAS,CAAC,CAAC;QACxC,MAAMC,MAAM,GAAG,MAAMH,MAAM,CAACI,IAAI,CAAC,CAAC;QAClC,MAAMC,OAAO,GAAG,IAAIC,WAAW,CAAC,OAAO,CAAC;QACxC,MAAMC,OAAO,GAAGF,OAAO,CAACG,MAAM,CAACL,MAAM,CAACM,KAAK,CAAC;QAE5C,MAAMC,UAAU,GAAGxB,IAAI,CAACyB,KAAK,CAACJ,OAAO,EAAE;UAAEK,MAAM,EAAE;QAAM,CAAC,CAAC;QACzD,MAAMC,gBAAgB,GAAG,CAAC,CAAC;QAC3B,MAAMC,QAAQ,GAAGJ,UAAU,CAACK,IAAI,CAAC,CAAC,CAAC;QAEnCD,QAAQ,CAACE,OAAO,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAK;UACnCL,gBAAgB,CAACI,OAAO,CAAC,GAAGP,UAAU,CAACK,IAAI,CAACI,KAAK,CAAC,CAAC,CAAC,CAACC,GAAG,CAACC,GAAG,IAAI;YAC9D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGF,GAAG,CAACH,KAAK,CAAC,CAACM,KAAK,CAAC,KAAK,CAAC;YAC/C,MAAM,CAACC,KAAK,EAAEC,WAAW,CAAC,GAAGH,OAAO,CAACC,KAAK,CAAC,KAAK,CAAC;YACjD,OAAO;cAAEF,IAAI;cAAEG,KAAK;cAAEC;YAAY,CAAC;UACrC,CAAC,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC;QACpB,CAAC,CAAC;QAEFlC,cAAc,CAACmB,gBAAgB,CAAC;MAClC,CAAC,CAAC,OAAOgB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IAEDlC,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAA0C,QAAA,eACE1C,OAAA,CAACF,SAAS;MAACI,QAAQ,EAAEA,QAAS;MAACE,WAAW,EAAEA;IAAY;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEV,CAAC;AAAC3C,EAAA,CAzCIF,OAAO;AAAA8C,EAAA,GAAP9C,OAAO;AA2Cb,eAAeA,OAAO;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}